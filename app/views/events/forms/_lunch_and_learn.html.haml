-if event.event_style.nil? || event.event_style.element_type == "Lunchlearn"
  =fields_for event do |e|
    .form_group
      .event-host-section.form-inline
        =e.label "Host(s)", class: "control-group"
        %button.btn.btn-default.form-control#add-event-host{type: "button", style: "margin-bottom:5px;"}
          %span.glyphicon.glyphicon-plus
          Add Host
      -event.lunch_hosts.order(first_name: :asc).each do |lunch_host|     
        .event-host-section.form-inline
          = e.select :hosts, User.order(first_name: :asc).collect {|l| [l.display_name, l.id]}, {include_blank: true, selected: lunch_host.id}, name: "event[hosts][]", class: "form-control additional-host-field"
          %span.btn.btn-primary.remove
            %span.glyphicon.glyphicon-minus
            Remove

    :javascript
      $(document).on("ready", function(){
        $("#add-event-host").on("click", function(){
          $(".event-host-section").last().after("<div class='event-host-section form-inline'>#{ e.select(:hosts, User.order(first_name: :asc).collect{|l| [l.display_name, l.id]},{}, name: 'event[hosts][]', class: 'form-control additional-host-field').tr_s('\n','').tr_s('"','\'').html_safe}<span class='btn btn-primary remove'><span class='glyphicon glyphicon-minus'/> Remove</span></div>");
          return $(".remove").on("click", function(){
            return $(this).parent().remove();
          });
        });
      });

.form_group
  =f.label :has_GoToMeeting, "Add GoToMeeting", class: "control-label"
  =f.check_box :has_GoToMeeting, checked: ((event.event_style.element.has_GoToMeeting  if event.event_style.element.respond_to? :has_GoToMeeting unless event.event_style.nil?)), class: "meeting gotomeeting"
 
  .form_group#gotomeetingform
    %div.form_group
      =f.label :go_to_meeting_url, nil, class: "control-label"
      =f.text_field :go_to_meeting_url, value: (event.event_style.element.go_to_meeting_url if event.event_style.element.respond_to? :go_to_meeting_url  unless event.event_style.nil?), class: "form-control"
    .form_group
      =f.label :meeting_phone_number, nil, class: "control-label"
      =f.text_field :meeting_phone_number, value: (event.event_style.element.meeting_phone_number if event.event_style.element.respond_to? :meeting_phone_number unless event.event_style.nil?), class: "form-control", pattern: '\(\d{3}\)\d{3}-\d{4}', placeholder: "(XXX)XXX-XXXX", title: "(XXX)XXX-XXXX" 
    .form_group
      =f.label :access_code, nil, class: "control-label"
      =f.text_field :access_code, value: (event.event_style.element.access_code if event.event_style.element.respond_to? :access_code unless event.event_style.nil?), class: "form-control", pattern: '\d{3}-\d{3}-\d{3}', placeholder: "XXX-XXX-XXX", title: "XXX-XXX-XXX" 
   

 

